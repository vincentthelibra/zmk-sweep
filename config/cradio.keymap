/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include "keymap_swedish.h"
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Layer definitions

#define BASE 0
#define SYM 1
#define EXT 2
#define FNC 3
#define SYM2 4
#define ACCENT 5
#define SETTINGS 6

// -----------------

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

&sk {
    ignore-modifiers;
};

/ {
    macros {
        // sometimes my device thinks a modifier is being held down
        // pressing all modifiers fixes it.

        unstick: unstick {
            label = "ZM_unstick";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // both right thumb keys
        // internal-left & external-right thumb keys
        // both left thumb keys

        left_1 {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <2 3>;
            timeout-ms = <30>;
        };

        right_1 {
            bindings = <&kp RBKT>;
            key-positions = <6 7>;
            timeout-ms = <30>;
        };

        left_2 {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <12 13>;
            timeout-ms = <30>;
        };

        right_2 {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <16 17>;
            timeout-ms = <30>;
        };

        left_3 {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <22 23>;
            timeout-ms = <30>;
        };

        right_3 {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <26 27>;
            timeout-ms = <30>;
        };

        under {
            bindings = <&kp UNDER>;
            key-positions = <15 17>;
            timeout-ms = <30>;
        };

        lessthan {
            bindings = <&kp LESS_THAN>;
            key-positions = <25 27>;
            timeout-ms = <30>;
        };

        greater {
            bindings = <&kp GREATER_THAN>;
            key-positions = <25 28>;
            timeout-ms = <30>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <14 15>;
            timeout-ms = <30>;
        };

        backsplash {
            bindings = <&kp BACKSLASH>;
            key-positions = <4 5>;
            timeout-ms = <30>;
        };

        plus {
            bindings = <&kp MINUS>;
            key-positions = <15 18>;
            timeout-ms = <30>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <10 12 11>;
            timeout-ms = <30>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <5 6>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <3 4>;
        };

        semi {
            bindings = <&kp SEMI>;
            key-positions = <16 17 18>;
        };

        colon {
            bindings = <&kp COLON>;
            key-positions = <7 8 6>;
        };

        sqt {
            bindings = <&kp SQT>;
            key-positions = <17 18>;
        };

        dqt {
            bindings = <&kp DQT>;
            key-positions = <17 18 26>;
        };

        caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <11 18>;
        };

        minus {
            bindings = <&kp EQUAL>;
            key-positions = <5 7>;
            timeout-ms = <30>;
            layers = <0>;
        };
    };

    behaviors {
        ht: ht {
            compatible = "zmk,behavior-hold-tap";
            label = "HT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <100>;
            global-quick-tap;
            flavor = "tap-preferred";
        };

        td_0: td_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_0";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&kp LCTRL>, <&mo 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // Base alpha layer

        default_layer {
            bindings = <
&kp Q           &kp W           &kp F        &kp P             &kp B      &kp J      &kp L              &kp U                &kp Y           &kp SEMICOLON
&ht LEFT_GUI A  &ht LEFT_ALT R  &ht LCTRL S  &ht LEFT_SHIFT T  &kp G      &kp M      &ht RIGHT_SHIFT N  &ht RIGHT_CONTROL E  &ht LEFT_ALT I  &ht LEFT_GUI O
&kp X           &kp C           &kp D        &kp V             &kp Z      &kp K      &kp H              &kp COMMA            &kp PERIOD      &kp SLASH
                                             &lt 2 BACKSPACE   &kp TAB    &kp ENTER  &lt 1 SPACE
            >;
        };

        // Numbers and high frequency symbols

        lower_layer {
            bindings = <
&kp N1           &kp N2                &kp N3                 &kp N4            &kp N5               &kp N6          &kp N7           &kp N8         &kp N9            &kp N0
&kp EXCLAMATION  &kp AT_SIGN           &kp POUND              &kp DOLLAR        &kp PERCENT          &kp CARET       &kp AMPERSAND    &kp ASTERISK   &kp SEMICOLON     &kp APOS
&kp ESCAPE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET    &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LESS_THAN  &kp GREATER_THAN  &kp RA(LBKT)
                                                              &to 3             &none                &none           &none
            >;
        };

        // Main modifiers and arrow keys

        raise_layer {
            bindings = <
&kp F1   &kp F2     &kp F3     &kp F4     &kp F5     &kp HOME  &kp END   &kp PAGE_UP   &kp PAGE_DOWN  &kp LA(TAB)
&kp F6   &kp F7     &kp F8     &kp F9     &kp F10    &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT      &kp K_APPLICATION
&kp F11  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp F12    &none     &none     &none         &none          &none
                               &none      &none      &none     &none
            >;
        };

        // Function keys with modifiers

        sys_layer {
            bindings = <
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &kp C_BRIGHTNESS_INC  &kp C_VOLUME_UP  &kp C_MUTE        &kp K_VOLUME_DOWN   &kp C_BRIGHTNESS_DEC
&trans       &trans        &trans        &trans        &trans          &trans                &kp C_REWIND     &kp C_PLAY_PAUSE  &kp C_FAST_FORWARD  &trans
&bootloader  &none         &none         &none         &none           &none                 &none            &none             &none               &bootloader
                                         &to 0         &none           &none                 &none
            >;
        };

        // Low frequency symbols.
        // Used to type regional accents.
        // Used to change the keyboard's settings.
    };
};
